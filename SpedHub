
if game.CoreGui:FindFirstChild("Mana") then
    game.CoreGui:FindFirstChild("Mana"):Destroy()
  end  
   
 local UIlib = loadstring(game:HttpGet("https://pastebin.com/raw/ZjHQa1yw"))()

  local OldNameCall = nil
  OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
      local Args = {...}
      local Self = Args[1]
      if self.Name == "Returner" and Args[1] == "You have been kicked from the game"  then
             return "  ___XP DE KEY"
      end
       if self.Name == "RemoteEvent" then
        if Args[1] == "Reset"  then
              return nil
        end
    end
      return OldNameCall(self, ...)
  end)


   local Win = UIlib:Window("Manahub", "Pet Simulator X")
   local Autofarm = Win:Tab("AutoFarm")
   local Misc = Win:Tab("Misc")
   local AutoOpenF = Win:Tab("Eggs")
   local pets2 = Win:Tab("Pets")
   local Visuals = Win:Tab("Visuals")
   local u = Win:Tab("Credits")

   local pathToScript = game.Players.LocalPlayer.PlayerScripts.Scripts.Game['Open Eggs']
local oldFunc = getsenv(pathToScript).OpenEgg
getgenv().Enabledboard = nil
getgenv().Hoverboard = "Original"
   AutoOpenF:Toggle("Remove egg opening animation", false, function(delanimation)
    if delanimation == true then 
        getsenv(pathToScript).OpenEgg = function() return end 
    else
        getsenv(pathToScript).OpenEgg = oldFunc
    end 
end)

   Misc:Slider("Walk Speed", 0, 250, 16, function(v)
   
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
   
   end)
   
   Misc:Slider("Jump Power", 0, 250, 16, function(v)
   
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
       
       end)

       Misc:Toggle("Auto Equip Best Pets", false, function(t)
        getgenv().BestPet = t
        while wait() do
            if getgenv().BestPet == true then
        pcall(function()
local args = {
    [1] = {}
}
workspace.__THINGS.__REMOTES:FindFirstChild("equip best pets"):InvokeServer(unpack(args))
        end)
    end
end
       end)

       for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
        v:Disable()
        end
   
       Misc:Toggle("Anti Afk", true,function(vu)
        for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
            v:Disable()
            end
       end)
   
       Misc:Button("Get Gamepasses", function()
           local gmppath = require(game:GetService("ReplicatedStorage").Framework.Modules.Client["5 | Gamepasses"])
           gmppath.Owns = function() return true end
       end)


spawn(function()

local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
while not v1.Loaded do
	game:GetService("RunService").Heartbeat:Wait();
end;
local l__ID__2 = v1.Directory.Gamepasses.Hoverboard.ID;
local u1 = nil;
local u2 = { 57.5, 75, 90 };
function Create(p1)
    v1.Variables.UsingHoverboard = true
	local v3 = p1 == v1.LocalPlayer;
	local u3 = v1.Player.Get("Character", p1);
	local u4 = v1.Player.Get("HumanoidRootPart", p1);
	local u5 = v1.Player.Get("Humanoid", p1);
	local function v4()
		local v5 = not v1.Variables.LoadingWorld and (u3 and (u4 and 0 < u5.Health));
		return v5;
	end;
	if not v4() then
		return;
	end;
	local v6 = v1.Save.Get(p1);
	if not v6 then
		return;
	end;
	local l__EquippedHoverboard__7 = getgenv().Hoverboard
	local v8 = v1.Directory.Hoverboards[l__EquippedHoverboard__7];
	if l__EquippedHoverboard__7 ~= "" then
		if not v8 then
			return;
		end;
	else
		return;
	end;
	if u3:FindFirstChild("__HOVERBOARD") then
		Remove(p1);
	end;
	local v9 = v8.board:Clone();
	local v10 = u5.HipHeight + u4.Size.Y / 2;
	v9.CFrame = u4.CFrame * CFrame.Angles(0, math.rad(90), 0) - Vector3.new(0, v10, 0) - Vector3.new(0, v9:FindFirstChild("Center").Position.Y, 0);
	v9.CanCollide = false;
	v9.Name = "__HOVERBOARD";
	v9.Parent = u3;
	local v11 = v1.Functions.Weld(u4, v9);
	local l__Sparkles__12 = v9.Back:FindFirstChild("Sparkles");
	local l__Running__13 = v1.Player.Get("RootPart", p1):FindFirstChild("Running");
	local v14 = nil;
	if l__Running__13 then
		v14 = l__Running__13.Volume;
		l__Running__13.Volume = 0;
	end;
	local v15 = nil;
	local v16 = nil;
	if v3 then
		v15 = Instance.new("BodyPosition");
		v15.MaxForce = Vector3.new(0, math.huge, 0);
		v15.Position = v9.Position;
		v15.D = 1400;
		v15.Parent = v9;
		v16 = Instance.new("BodyGyro");
		v16.MaxTorque = Vector3.new(math.huge, math.huge, math.huge);
		v16.CFrame = CFrame.Angles(0, math.rad(-90), 0);
		v16.Parent = v9;
	end;
	local v17 = v1.Assets.Particles:FindFirstChild("Hoverboard Spawn"):Clone();
	v17.Parent = v9.Center;
	v17:Emit(10);
	v1.Audio.Play(v8.sounds.equip, v9.CFrame.p, 1, 0.5);
	if v3 then
		u1 = v1.Functions.Animation(3510226236, u5);
	end;
	local u6 = os.clock();
	local function u7()
		local v18 = v9.Size.X / 2;
		local v19 = v9.Size.Z / 2;
		local v20 = nil;
		local v21 = 1 - 1;
		while true do
			if v21 == 1 then
				local v22 = Vector3.new(-v18, 0, v19);
			elseif v21 == 2 then
				v22 = Vector3.new(v18, 0, -v19);
			elseif v21 == 3 then
				v22 = Vector3.new(v18, 0, v19);
			elseif v21 == 4 then
				v22 = Vector3.new(-v18, 0, -v19);
			else
				v22 = Vector3.new(0, 0, 0);
			end;
			local v23, v24 = game.Workspace:FindPartOnRayWithWhitelist(Ray.new(u4.CFrame.p + v22, Vector3.new(0, -(3 + v10), 0)), { game.Workspace.__MAP });
			if v23 then
				if v24 then
					if v20 then
						if v20.Y < v24.Y then
							v20 = v24;
						end;
					else
						v20 = v24;
					end;
				end;
			end;
			if 0 <= 1 then
				if v21 < 5 then

				else
					break;
				end;
			elseif 5 < v21 then

			else
				break;
			end;
			v21 = v21 + 1;		
		end;
		return v20;
	end;
	local u8 = 0;
	local u9 = 0;
	local u10 = u2[v8.speed];
	local u11 = v1.Audio.Play(v8.sounds.idle, v9, 1, 0.1, nil, nil, true);
	v1.RunService:BindToRenderStep("Hoverboard " .. p1.Name, Enum.RenderPriority.Character.Value + 1, function()
		if v9 then
			if v9.Parent then
				if not v4() then
					if l__Running__13 then
						l__Running__13.Volume = v14;
					end;
					pcall(function()
						v1.RunService:UnbindFromRenderStep("Hoverboard " .. p1.Name);
					end);
					return;
				end;
			else
				if l__Running__13 then
					l__Running__13.Volume = v14;
				end;
				pcall(function()
					v1.RunService:UnbindFromRenderStep("Hoverboard " .. p1.Name);
				end);
				return;
			end;
		else
			if l__Running__13 then
				l__Running__13.Volume = v14;
			end;
			pcall(function()
				v1.RunService:UnbindFromRenderStep("Hoverboard " .. p1.Name);
			end);
			return;
		end;
		if v3 then
			u5.PlatformStand = true;
			local v25 = u7();
			local v26 = v25 ~= nil;
			if u8 == nil then u8 = 0 end
			print(v9.Position)
			print(v9.Position.Y or "nil pos_y")
			print(u8 or "nil u8")
			local new = v9.Position.Y - u8
			if v26 then new = v25.Y + 3 end
			v15.Position = Vector3.new(0, (new) + (math.sin((os.clock() - u6) * 3) / 2 - 0.5), 0);
			local v27
			if v26 then
				v27 = 0;
			else
				v27 = math.clamp(u8 * 1.065, 2, 10);
			end;
			u8 = v27;
			local v28 = u4.Position + u5.MoveDirection;
			if v28 ~= u4.Position then
				v16.CFrame = CFrame.new(u4.Position, v28) * CFrame.Angles(0, math.rad(90), 0);
			end;
			if u5.Jump then
				if v26 then
					if 1 <= os.clock() - u9 then
						u9 = os.clock();
						v1.Audio.Play(v8.sounds.jump, v9, 1.25, 0.4);
					end;
				end;
			end;
			local v29 = 0;
			if os.clock() - u9 <= 0.3 then
				v29 = (1 - math.clamp((os.clock() - u9) / 0.3, 0, 1) ^ 2) * 7000;
			end;
			local v30 = u5.MoveDirection * u10;
			u4.Velocity = u4.Velocity:Lerp(Vector3.new(v30.X, -v29, v30.Z), 0.035);
		end;
		local l__Magnitude__31 = u4.Velocity.Magnitude;
		u11.Pitch = math.clamp(1 + l__Magnitude__31 / u10, 1, 2);
		l__Sparkles__12.Enabled = 8 < l__Magnitude__31;
	end);
end;
function Remove(p2)
    v1.Variables.UsingHoverboard = false
	local l____HOVERBOARD__32 = v1.Player.Get("Character", p2):FindFirstChild("__HOVERBOARD");
	if l____HOVERBOARD__32 then
		l____HOVERBOARD__32:Destroy();
	end;
	if p2 == v1.LocalPlayer then
		if u1 then
			u1:Stop();
		end;
		v1.Player.Get("HumanoidRootPart").Velocity = Vector3.new();
		v1.Player.Get("Humanoid").PlatformStand = false;
		v1.RunService:UnbindFromRenderStep("Hoverboard " .. p2.Name);
	end;
end;
local l__Hoverboard__12 = v1.GUI.Main.Tools.Hoverboard;
local l__Enum_KeyCode_Q__14 = Enum.KeyCode.Q;

v1.Signal.Fired("Entered Cannon"):Connect(function()
	if v1.Variables.UsingHoverboard then
		Toggle();
	end;
end);
v1.Signal.Fired("World Changed"):Connect(function()
	if v1.Variables.UsingHoverboard then
		Toggle();
	end;
end);

function Toggle()
    if getgenv().Enabledboard == false then return end
	if v1.Variables.UsingHoverboard then
		Remove(v1.LocalPlayer);
	else
		Create(v1.LocalPlayer);
	end;
end;

v1.UserInputService.InputBegan:Connect(function(p5, p6)
    if p6 then return end
    if p5.KeyCode == l__Enum_KeyCode_Q__14 then
	    Toggle()
	end
end);

end)



       Misc:line()

       Misc:Button("Bank", function()
        game:GetService("Players").LocalPlayer.PlayerGui.Bank.Enabled = true
    end)
    Misc:Button("Golden", function()
        game:GetService("Players").LocalPlayer.PlayerGui.Golden.Enabled = true
    end)
    Misc:Button("Rainbow", function()
        game:GetService("Players").LocalPlayer.PlayerGui.Rainbow.Enabled = true
    end)
    Misc:Button("Fuse Pets", function()
        game:GetService("Players").LocalPlayer.PlayerGui.FusePets.Enabled = true
    end)
    Misc:Button("DarkMatter", function()
        game:GetService("Players").LocalPlayer.PlayerGui.DarkMatter.Enabled = true
    end)
    Misc:Button("Merchant", function()
        game:GetService("Players").LocalPlayer.PlayerGui.Merchant.Enabled = true
    end)
    Misc:Button("Admin Commands (Toggle Key = F4)", function()
        game:GetService("Players").LocalPlayer.PlayerGui["Admin Commands"].Frame.Visible = true
    end)
    Misc:Button("Teleport", function()
        game:GetService("Players").LocalPlayer.PlayerGui.Teleport.Enabled = true
    end)
   
   
   u:Button("Mana#9724", function()
   
       setclipboard("https://discord.gg/NSJKdznY3M")
       
   end) 
   u:Button("Manahub Discord Server", function()
      local req = (syn and syn.request) or (http and http.request) or http_request
      if req then
          req({
              Url = 'http://127.0.0.1:6463/rpc?v=1',
              Method = 'POST',
              Headers = {
                  ['Content-Type'] = 'application/json',
                  Origin = 'https://discord.com'
              },
              Body = game:GetService('HttpService'):JSONEncode({
                  cmd = 'INVITE_BROWSER',
                  nonce = game:GetService('HttpService'):GenerateGUID(false),
                  args = {code = 'manahub'}
              })
          })
      end
   end)

       
       local Chests = {
           'All';
           -- Spawn
           "Magma Chest",
           -- Fantasy
           "Enchanted Chest", "Hell Chest", "Haunted Chest", "Angel Chest", "Grand Heaven Chest",
           -- Tech
           "Giant Tech Chest", "Giant Steampunk Chest", "Giant Alien Chest",
           -- Other 
           "Gingerbread Chest", "Giant Present",
        }



       local Method = {"Area Farm", "Super Area Farm", "Gem Farm", "Chest Farm", 'Random Farm', 'Nearest', 'Candy Cane Farm',}

       local Worlds = {
           "Spawn",
           "Fantasy",
           "Tech",
       }

       local AreaListLoc = { 
       'Town', 'Forest', 'Beach', 'Mine', 'Winter', 'Glacier', 'Desert', 'Volcano', -- Spawn
       'Enchanted Forest', 'Ancient', 'Samurai', 'Candy', 'Haunted', 'Hell', 'Heaven', -- Fantasy
       'Ice Tech', 'Tech City', 'Dark Tech', 'Steampunk', 'Alien Lab', 'Alien Forest', -- Tech
   }


   Autofarm:Dropdown("Farm Methods", Method, function(SelectMethod)
    getgenv().SelectedMethod = SelectMethod
       end)

   local Chestareas = {"Giant Present", "Gingerbread Chest", 'Giant Alien Chest','Giant Steampunk Chest','Giant Tech Chest','Grand Heaven Chest','Angel Chest','Haunted Chest','Hell Chest','Enchanted Chest','Magma Chest',}
   Autofarm:Dropdown("Select Chest",Chestareas,function(chestfarm) 
    getgenv().Chestareas = chestfarm
   end)

   Autofarm:Dropdown("Select Area", AreaListLoc, function(selectare)
    getgenv().SelecArea = selectare
end)


   -------------------------------
   
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "buy egg")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "join coin")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "farm coin")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "claim orbs")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "change pet target")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "get trade")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "add trade pet")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "remove trade pet")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "convert to dark matter")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "redeem dark matter pet")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "redeem rank rewards")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "redeem vip rewards")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "toggle setting")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "activate boost")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "use golden machine")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "use rainbow machine")
   workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "buy upgrade")
   
   local args = {
    [1] = "b",
    [2] = "redeem merch code"
}
workspace.__THINGS.__REMOTES.MAIN:FireServer(unpack(args))

   spawn(function()
    for i = 1,5 do
   local args = {
       [1] = "b",
       [2] = "redeem merch code"
   }
   workspace.__THINGS.__REMOTES.MAIN:FireServer(unpack(args))
end
end)
   -------------------------------

   
    local GC = getconnections or get_signal_cons
    if GC then
        for i,v in pairs(GC(game.Players.LocalPlayer.Idled)) do
            if v["Disable"] then
                v["Disable"](v)
            elseif v["Disconnect"] then
                v["Disconnect"](v)
            end
        end
    else
        print("Unlucky.")
        local vu = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)
    end

   function FarmCoin(CoinID, PetID)
    game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
    game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
 end
   

       function GetThePets()
        local returntable = {}
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
            if v.ClassName == 'TextButton' and v.Equipped.Visible then
                table.insert(returntable, v.Name)
            end
        end
        return returntable
     end



     local AreaWorldTable = {}
     for _, v in pairs(game:GetService("ReplicatedStorage").Game.Coins:GetChildren()) do
         for _, b in pairs(v:GetChildren()) do
             table.insert(AreaWorldTable, b.Name)
         end
         table.insert(AreaWorldTable, v.Name)
     end
     
     function AllChests()
      local returntable = {}
      local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
      for i,v in pairs(ListCoins) do
          local coin_chest = v
          coin_chest["index"] = i
          for a,b in pairs(AreaWorldTable) do
              if string.find(v.n, b) then
                  local thing = string.gsub(v.n, b.." ", "")
                  if table.find(Chests, thing) then
                    coin_chest.n = thing
                      table.insert(returntable, coin_chest)
                  end
              end
          end
      end
      return returntable
  end

   
local StartFarm = false
       Autofarm:Toggle("Fram Selected Method", false, function(t)
StartFarm = t
       end)

       spawn(function()
        while task.wait() do
            if StartFarm then
    pcall(function()
    if getgenv().SelectedMethod == 'Chest Farm' then

getpet = GetThePets()

        pcall(function()
        for i,v in pairs(AllChests()) do
            if (v.n == getgenv().Chestareas) then
                for a, b in pairs(getpet) do
                    coroutine.wrap(function()
                        FarmCoin(v.index, b)
                    end)()
                end
         end
 end
end)


elseif getgenv().SelectedMethod == 'Gem Farm' then

    function getGemid()
        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetDescendants()) do
            if v:IsA"MeshPart" then
                if v.MeshId == 'rbxassetid://7041620873' or v.MeshId == 'rbxassetid://7041621431' or v.MeshId == 'rbxassetid://7041621329' or v.MeshId == 'rbxassetid://7041620873' then
                    a = v.Parent.Name
                end
            end
        end
        return a
    end
        
             function GetThePets2()
                local returntable = {}
                for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
                    if v.ClassName == 'TextButton' and v.Equipped.Visible then
                        table.insert(returntable, v.Name)
                    end
                end
                return returntable
             end
             
             local GetMyPets = GetThePets2()
             
                 function FarmCoin65(CoinID, PetID)
                game.workspace["__THINGS"]["__REMOTES"]["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
                game.workspace["__THINGS"]["__REMOTES"]["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
                 end
        
        
        
        for i,v in pairs(GetMyPets) do
          pcall(function() FarmCoin65(getGemid(), v) end)
           end

elseif getgenv().SelectedMethod == 'Super Area Farm' then

    getgenv().World = getgenv().Selectaworld
    getgenv().Area = getgenv().SelecArea
     
     function GetThePets2()
        local returntable = {}
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
            if v.ClassName == 'TextButton' and v.Equipped.Visible then
                table.insert(returntable, v.Name)
            end
        end
        return returntable
     end

     function FarmCoin(CoinID, PetID)
        game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
        game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
     end

     function GetCoins(area)
        local returntable = {}
        local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
        for i,v in pairs(ListCoins) do
            if string.lower(v.a) == string.lower(area) then
                table.insert(returntable, i)
            end
        end
        return returntable
     end
     
        local cointhiny = GetCoins(getgenv().Area)
        local getpet = GetThePets2()
        for i = 1, #cointhiny do
            coroutine.wrap(function()
            pcall(function() FarmCoin(cointhiny[i], getpet[i % #getpet + 1]) end)
            end)()
        end



elseif getgenv().SelectedMethod == 'Area Farm' then

    getgenv().World = getgenv().Selectaworld
    getgenv().Area = getgenv().SelecArea
     
     function GetThePets2()
        local returntable = {}
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
            if v.ClassName == 'TextButton' and v.Equipped.Visible then
                table.insert(returntable, v.Name)
            end
        end
        return returntable
     end

     function FarmCoin(CoinID, PetID)
        game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
        game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
     end
     
     function GetCoins(area)
        local returntable = {}
        local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
        for i,v in pairs(ListCoins) do
            if string.lower(v.a) == string.lower(area) then
                table.insert(returntable, i)
            end
        end
        return returntable
     end
     

        local cointhiny = GetCoins(getgenv().Area)
        local getpet = GetThePets2()
        for i = 1, #cointhiny do
            pcall(function() FarmCoin(cointhiny[i], getpet[i % #getpet / 1 + 2 - 0 * 4]) end)
        end


elseif getgenv().SelectedMethod == 'Random Farm' then

                        function GetThePets4()
                            local returntable = {}
                            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
                                if v.ClassName == 'TextButton' and v.Equipped.Visible then
                                    table.insert(returntable, v.Name)
                                end
                            end
                            return returntable
                         end
                          getpet2 = GetThePets4()
    
                          function FarmCoin3(CoinID, PetID)
                            game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
                            game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
                         end
                        
                        local cointable32 = game:GetService("Workspace")["__THINGS"].Coins:GetChildren()
                        local cointable3 = game:GetService("Workspace")["__THINGS"].Coins:GetChildren()
    
                        local croin2 = cointable32[70]
                        local croin3 = cointable3[1]
                        local croin4 = cointable32[54]
                        local croin5 = cointable3[1]
                        
                        local allareadelay = .2
                        
                        for i,v in pairs(getpet2) do
                            FarmCoin3(croin2.Name, v)
                            
                            end
                            task.wait(allareadelay)
                            for i,v in pairs(getpet2) do
                                coroutine.wrap(function()
                                FarmCoin3(croin3.Name, v)
                                end)()
                                end
                                task.wait(allareadelay)
                                for i,v in pairs(getpet2) do
                                    FarmCoin3(croin4.Name, v)
                                    end
                                    task.wait(allareadelay)
                                    
                                    for i,v in pairs(getpet2) do
                                        FarmCoin3(croin5.Name, v)
                                        end


elseif getgenv().SelectedMethod == 'Nearest' then
    

pcall(function()
    
    function GetThePets540()
        local returntable = {}
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
            if v.ClassName == 'TextButton' and v.Equipped.Visible then
                table.insert(returntable, v.Name)
            end
        end
        return returntable
     end

    
    function FarmCoin2(CoinID, PetID)
        game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
        game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
     end

     pethingy2 = GetThePets540()

     local nearest
           local NearestOne = math.huge
           for i,v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetChildren()) do
                    if (v.POS.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < NearestOne then
                        nearest = v
                        NearestOne = (v.POS.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        end 
    end

    for a,b in pairs(pethingy2) do
        coroutine.wrap(function()
       FarmCoin2(nearest.Name, b)
    end)()
       end
    end)


elseif getgenv().SelectedMethod == 'Candy Cane Farm' then

    function getcandyid()
        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetDescendants()) do
            if v:IsA"MeshPart" then
                if v.MeshId == 'rbxassetid://8269538460' or v.MeshId == 'rbxassetid://8269538585' or v.MeshId == "rbxassetid://8269538585" then
                    a = v.Parent.Name
                end
            end
        end
        return a
        end
        
             function GetThePets2()
                local returntable = {}
                for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
                    if v.ClassName == 'TextButton' and v.Equipped.Visible then
                        table.insert(returntable, v.Name)
                    end
                end
                return returntable
             end
             
             local GetMyPets = GetThePets2()
             
                 function FarmCoin65(CoinID, PetID)
                game.workspace["__THINGS"]["__REMOTES"]["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
                game.workspace["__THINGS"]["__REMOTES"]["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
                 end
        
        
        
        for i,v in pairs(GetMyPets) do
           FarmCoin65(getcandyid(), v)
           end
        

                end -- Main if funcion end
            end) -- Main pcall function end
        end
    end
end) -- Main Spawn function end

   Autofarm:line()


   Autofarm:Toggle("Fast AutoCollect Coins", false, function(t)
    fastcollect = t
    while fastcollect do task.wait()
    pcall(function()
        local ohTable1 = {[1] = {}}
        for i,v in pairs(game.workspace['__THINGS'].Orbs:GetChildren()) do
            ohTable1[1][i] = v.Name
        end
        game.workspace['__THINGS']['__REMOTES']["claim orbs"]:FireServer(ohTable1)

    end)
end
           end)
local LootBagcollect = false
           Autofarm:Toggle('Auto Collect Loot Bags', false, function(t)
            LootBagcollect = t
           end)

           spawn(function()
        while task.wait(.5) do
        if LootBagcollect then
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
                if v:IsA('MeshPart') then
                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                end
                end
        end
        end
           end)
   
   Autofarm:Toggle("Auto Redeam Rank Rewards", false, function(q)
       getgenv().whaaat = q
                       while wait(.3) do
                           if getgenv().whaaat == true then
   
                            workspace.__THINGS.__REMOTES["redeem rank rewards"]:InvokeServer({})
                            workspace.__THINGS.__REMOTES["redeem rank rewards"]:InvokeServer({})
end
   end
   end)

   Autofarm:Button("Stat Tracker", function() 
    loadstring(game:HttpGet('https://pastebin.com/raw/dPXXyp4A'))()
end)
   
   Autofarm:Toggle("Auto Use Triple Damage Boost", false, function(state)
       if state then
           function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
   
   local args = {
       [1] = {
           [1] = "Triple Damage"
       }
   }
   
   workspace.__THINGS.__REMOTES:FindFirstChild("activate boost"):FireServer(unpack(args))
   
           getgenv().hahj = true;
           
           while wait(1200) do
               if getgenv().hahj == true then
           function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
   
   local args = {
       [1] = {
           [1] = "Triple Damage"
       }
   }
   
   workspace.__THINGS.__REMOTES:FindFirstChild("activate boost"):FireServer(unpack(args))
   
           end
           end
               else
                   function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
   
   local args = {
       [1] = {
           [1] = "Triple Damage"
       }
   }
   
   workspace.__THINGS.__REMOTES:FindFirstChild("activate boost"):FireServer(unpack(args))
   
                   getgenv().hahj = false;
                   
                   while wait(1200) do
                       if getgenv().hahj == true then
                   function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
                   
   local args = {
       [1] = {
           [1] = "Triple Damage"
       }
   }
   
   workspace.__THINGS.__REMOTES:FindFirstChild("activate boost"):FireServer(unpack(args))
   
                   end
                   end
               end
   end)
   
   Autofarm:Toggle("Auto Use Triple Coin Boost", false, function(state)
           if state then
            function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end

            local args = {
                [1] = {
                    [1] = "Triple Coins",
                },
            }
            
            workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
            getgenv().hahj = true;
            
            while wait(1200) do
                if getgenv().hahj == true then
            function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
            
            local args = {
                [1] = {
                    [1] = "Triple Coins",
                },
            }
            
            workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
            end
            end
                   else
                    function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end

                    local args = {
                        [1] = {
                            [1] = "Triple Coins",
                        },
                    }
                    
                    workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
                    getgenv().hahj = false;
                    
                    while wait(1200) do
                        if getgenv().hahj == true then
                    function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
                    
                    local args = {
                        [1] = {
                            [1] = "Triple Coins",
                        },
                    }
                    
                    workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
                    end
                    end
                   end
       end)
   
   Autofarm:Button("Use Super Luck!", function()
       function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
       
       local args = {
           [1] = {
               [1] = "Super Lucky",
           },
       }
       
       workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
       
       end)
       
       Autofarm:Button("Use ULTRA Luck!", function()
           function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end
       
           local args = {
               [1] = {
                   [1] = "Ultra Lucky",
               },
           }
           
           workspace["__THINGS"]["__REMOTES"]["activate boost"]:FireServer(unpack(args))
           
           end)
       
       Autofarm:Button("FPSBoost", function()
           
           local decalsyeeted = true
       local g = game
       local w = g.Workspace
       local l = g.Lighting
       local t = w.Terrain
       t.WaterWaveSize = 0
       t.WaterWaveSpeed = 0
       t.WaterReflectance = 0
       t.WaterTransparency = 0
       l.GlobalShadows = false
       l.FogEnd = 9e9
       l.Brightness = 0
       settings().Rendering.QualityLevel = "Level01"
       for i, v in pairs(g:GetDescendants()) do
           if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
               v.Material = "Plastic"
               v.Reflectance = 0
           elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
               v.Transparency = 1
           elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
               v.Lifetime = NumberRange.new(0)
           elseif v:IsA("Explosion") then
               v.BlastPressure = 1
               v.BlastRadius = 1
           elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
               v.Enabled = false
           elseif v:IsA("MeshPart") then
               v.Material = "Plastic"
               v.Reflectance = 0
               v.TextureID = 10385902758728957
           end
       end
       for i, e in pairs(l:GetChildren()) do
           if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
               e.Enabled = false
           end
       end
       end)

       
       local eggeri = {} 
       for i,v in pairs(game.ReplicatedStorage.Game.Eggs:GetChildren()) do 
           for i2,v2 in pairs(v:GetChildren()) do 
               table.insert(eggeri, v2.Name)
           end 
       end

       AutoOpenF:Dropdown("Select egg",eggeri,function(shit)
             SelectEggs = shit
       end)
       
       AutoOpenF:Toggle("Start Egg Open", false, function(startegss)
       start = startegss
       while start do wait()
       local args = {
          [1] = {
              [1] = SelectEggs,
              [2] = false
          }
       }
       workspace.__THINGS.__REMOTES:FindFirstChild("buy egg"):InvokeServer(unpack(args))
       print("you oppend: ", SelectEggs)
       end
       end)

       AutoOpenF:Toggle("Triple Open Eggs (Gamepass)", false, function(t)
        start2 = t
        while start2 do wait()
        local args = {
           [1] = {
               [1] = SelectEggs,
               [2] = true
           }
        }
        workspace.__THINGS.__REMOTES:FindFirstChild("buy egg"):InvokeServer(unpack(args))
        print("you oppend: ", SelectEggs) 
    end
       end)

   
   AutoOpenF:Toggle("Autobuy merchant item 1", false, function(fuck)
   
       getgenv().whatfuck = fuck
       while wait() do
           if getgenv().whatfuck == true then
   
           local args = {
               [1] = {
                   [1] = 1
               }
           }
           
           workspace.__THINGS.__REMOTES:FindFirstChild("buy merchant item"):InvokeServer(unpack(args))
   
        end
       end
   end)
   
   AutoOpenF:Toggle("Autobuy merchant item 2", false, function(i)
   
       getgenv().ohmylord = i
       while wait() do
           if getgenv().ohmylord == true then
   
           local args = {
               [1] = {
                   [1] = 2
               }
           }
           
           workspace.__THINGS.__REMOTES:FindFirstChild("buy merchant item"):InvokeServer(unpack(args))
        end
       end
   end)
   
   AutoOpenF:Toggle("Autobuy merchant item 3", false, function(i)
   
       getgenv().ohmylord = i
       while wait() do
           if getgenv().ohmylord == true then
   
           local args = {
               [1] = {
                   [1] = 3
               }
           }
           
           workspace.__THINGS.__REMOTES:FindFirstChild("buy merchant item"):InvokeServer(unpack(args))
   
       end
    end
   end)
   
AutoOpenF:line()
AutoOpenF:Toggle("Auto Upgrade Pet Storage", false, function(t)
    getgenv().PetStorage = t
    while wait() do
        if getgenv().PetStorage == true then
    local args = {
        [1] = {
            [1] = "Pet Storage"
        }
    }
    workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))
    
        end
    end
    end)

    AutoOpenF:Toggle("Auto Upgrade walkspeed", false, function(t)
        getgenv().walkspeed = t
        while wait() do
            if getgenv().walkspeed == true then

local args = {
    [1] = {
        [1] = "Player Walkspeed"
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))

            end
        end
        end)
        AutoOpenF:Toggle("Auto Upgrade Orbs Reach", false, function(t)
            getgenv().walksorbreachpeed = t
            while wait() do
                if getgenv().orbreach == true then
    
local args = {
    [1] = {
        [1] = "Orb Pickup Distance"
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))

                end
            end
            end)
            AutoOpenF:Toggle("Auto Upgrade More Diamonds", false, function(t)
                getgenv().morediamonds = t
                while wait() do
                    if getgenv().morediamonds == true then
local args = {
    [1] = {
        [1] = "More Diamonds"
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))

                    end
                end
                end)
                AutoOpenF:Toggle("Auto Upgrade Pet Speed", false, function(t)
                    getgenv().PetWalkspeed = t
                    while wait() do
                        if getgenv().PetWalkspeed == true then
local args = {
    [1] = {
        [1] = "Pet Walkspeed"
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))

                        end
                    end
                    end)
                    AutoOpenF:Toggle("Auto Upgrade Pet Strength", false, function(t)
                        getgenv().PetStrength = t
                        while wait() do
                            if getgenv().PetStrength == true then

local args = {
    [1] = {
        [1] = "Pet Strength"
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("buy upgrade"):InvokeServer(unpack(args))
                            end
                        end
                        end)
                
 
   AutoOpenF:line()
   
               AutoOpenF:Toggle("AutoOpen Random Eggs", false, function(uwu)
       
                   getgenv().Ani = uwu
                   while wait() do
                       if getgenv().Ani == true then
   
                       loadstring(game:HttpGet('https://raw.githubusercontent.com/Mana42138/pet-sim-stuff/main/Auto-open-random-eggs'))()
                       wait(.1)
           end
        end
           end)


u:line()
                                       u:Button("Destroy Gui", function()
                                        game.CoreGui:FindFirstChild("Mana"):Destroy()
                                    end)

                                    u:Button("Rejoin", function()
                                        local ts = game:GetService("TeleportService")
                                        local p = game:GetService("Players").LocalPlayer
                                        ts:Teleport(game.PlaceId, p)
                                     end)




local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local Network = GameLibrary.Network
local Run_Service = game:GetService("RunService")
local rs = Run_Service.RenderStepped
local IDToName = {}
local NameToID = {}
local PettoRarity = {}
local RarityTable = {}
local PetNamesTable = {}
local PetNamesTable = {}

local Library = require(game:GetService("ReplicatedStorage").Framework.Library)
local IDToName = {}
local NameToID = {}
for i,v in pairs(Library.Directory.Pets ) do
    IDToName[i] = v.name
    NameToID[v.name] = i
end

function GetMyPets()
       local returntable = {}
       for i,v in pairs(GameLibrary.Save.Get().Pets) do
           if v.e then 
               table.insert(returntable, v.uid)
           end
       end
       return returntable
    end



function GetPets()
    local MyPets = {}
    for i,v in pairs(GameLibrary.Save.Get().Pets) do
            local ThingyThingyTempTypeThing = (v.g and 'Gold') or (v.r and 'Rainbow') or (v.dm and 'Dark Matter') or 'Normal'
            local TempString = ThingyThingyTempTypeThing .. IDToName[v.id]
            if MyPets[TempString] then
                table.insert(MyPets[TempString], v.uid)
            else
                MyPets[TempString] = {}
                table.insert(MyPets[TempString], v.uid)
            end
        end
    return MyPets
end

for i,v in pairs(GameLibrary.Directory.Pets) do
    IDToName[i] = v.name
    NameToID[v.name] = i
    PettoRarity[i] = v.rarity
    if not table.find(RarityTable, v.rarity) then
        table.insert(RarityTable, v.rarity)
    end
    table.insert(PetNamesTable, v.name)
end

pets2:Slider("Select pet amount", 0, 6, 1, function(countcombinefunc)
    if countcombinefunc then
        getgenv().CountCombineFunc1 = countcombinefunc
    end
    print("Selected Combine Count: ", getgenv().CountCombineFunc1)
end)



pets2:Toggle("Auto golden", false, function(togglegoldfunc)
    
if togglegoldfunc == true then
    getgenv().ToggleGold = true
elseif togglegoldfunc == false then
    getgenv().ToggleGold = false
end
end)


pets2:Toggle("Auto rainbow", false, function(toggleraibowfunc)
    
if toggleraibowfunc == true then
    getgenv().ToggleRainbow = true
elseif toggleraibowfunc == false then
    getgenv().ToggleRainbow = false
end
end)

pets2:Toggle("Enable Auto Golden / Rainbow", false, function(autocombinefunc)
    
    if autocombinefunc == true then
       getgenv().AutoCom = true
    elseif autocombinefunc == false then
        getgenv().AutoCom = false
    end
    
    while wait() and getgenv().AutoCom do
        for i, v in pairs(GetPets()) do
            if #v >= getgenv().CountCombineFunc1 and getgenv().AutoCom then
                if string.find(i, "Normal") and getgenv().AutoCom and getgenv().ToggleGold then
                    local Args = {}
                    for eeeee = 1, getgenv().CountCombineFunc1 do
                        Args[#Args+1] = v[#Args+1]
                    end
                    Library.Network.Invoke("use golden machine", Args)
    
                elseif string.find(i, "Gold") and getgenv().AutoCom and getgenv().ToggleRainbow then
                    local Args = {}
                    for eeeee = 1, getgenv().CountCombineFunc1 do
                        Args[#Args+1] = v[#Args+1]
                    end
                    Library.Network.Invoke("use rainbow machine", Args)
                end
            end
        end
    end
    
    spawn(function()
        while wait() and getgenv().AutoCom do
            if not getgenv().ToggleGold and not getgenv().ToggleRainbow then 
                repeat wait(1) until getgenv().ToggleGold or getgenv().ToggleRainbow
            end
            if tonumber(getgenv().CountCombineFunc1) == nil then
                repeat wait() until tonumber(getgenv().CountCombineFunc1) ~= nil
            end
            for i, v in pairs(GetPets()) do
                if #v >= getgenv().CountCombineFunc1 and (getgenv().ToggleGold or getgenv().ToggleRainbow) then
                    if string.find(i, "Normal") and getgenv().ToggleGold then
                        local Args = {}
                        for eeeee = 1, getgenv().CountCombineFunc1 do
                            Args[#Args+1] = v[#Args+1]
                        end
                       GameLibrary.Network.Invoke("use golden machine", Args)
                   elseif string.find(i, "Gold") and getgenv().ToggleRainbow then
                        local Args = {}
                        for eeeee = 1, getgenv().CountCombineFunc1 do
                            Args[#Args+1] = v[#Args+1]
                       end
                    GameLibrary.Network.Invoke("use rainbow machine", Args)
                    end
                end
            end
        end
    end)
    end)

pets2:Toggle("Auto Claim Dark Matter Pets", false, function(autoclaimdark)

if autoclaimdark == true then
    _G.AutoClaimDarkMatter = true
elseif autoclaimdark == false then
    _G.AutoClaimDarkMatter = false
end
    
spawn(function()
    while task.wait() and _G.AutoClaimDarkMatter do
        for i,v in pairs(GameLibrary.Save.Get().DarkMatterQueue) do
            if math.floor(v.readyTime - os.time()) < 0 then
                workspace.__THINGS.__REMOTES["redeem dark matter pet"]:InvokeServer({[1] = i})
            end
            end
        task.wait(15)
    end
end)
end)

pets2:line()

                         pets2:Toggle("Huge Cat Code Generator", false, function(t)

local codes = 'abcdefghijklmnopqrstuvwxyz0123456789'
if not isfile('working codes.txt') then
   writefile('working codes.txt', '')
end

function generateCode()
   local code = ''
   for i = 1, 10 do
       code = code .. string.split(codes,'')[math.random(1, #string.split(codes, ''))]
   end
   return 'pet-' .. code
end
for i = 1, 1000000000000 do
local code = generateCode()
local request = workspace.__THINGS.__REMOTES['redeem merch code']:InvokeServer({code})
end
end)



Visuals:Dropdown("Select Pet", {
    'Bunny', 
    'Cat' ,
    'Dalmatian',
    'Dog' ,
    'White Bunny',
    'Chick',
    'Chicken', 
    'Cow' ,
    'Pig', 
    'Noob', 
    'Wood Egg',
    'Bear', 
    'Corgi',
    'Fox' ,
    'Lamb' ,
    'Monkey', 
    'Black Bear', 
    'Parrot',
    'Raccoon', 
    'Squirrel' ,
    'Tiger', 
    'Blue Fish', 
    'Goldfish',
    'Green Fish' ,
    'Hydra', 
    'Turtle' ,
    'Ducky' ,
    'Flamingo' ,
    'Kraken' , 
    'Shark',
    'Ugly Duckling' ,
    'Elephant' ,
    'Gecko' ,
    'Griffin' ,
    'Happy Rock', 
    'Geode Egg',
    'Bat', 
    'Bull', 
    'Immortuus', 
    'Mortuus' ,
    'Orange Gecko' ,
    'Arctic Fox', 
    'Deer' ,
    'Frost Dragon' ,
    'Snow Cat', 
    'Snow Dog' ,
    'Penguin' ,
    'Polar Bear', 
    'Seal', 
    'Snowman', 
    'Walrus', 
    'Husky' ,
    'Icemortuus' ,
    'Ice Slime' ,
    'Snow Leopard', 
    'Snow Squirrel', 
    'Yeti Egg',
    'Angry Yeti', 
    'Cheerful Yeti' ,
    'Puffin', 
    'Snow Ram' ,
    'Dominus Empyreus', 
    'Dominus Frigidus', 
    'Dominus Infernus',
    'Domortuus', 
    'Froggy',
    'Cyclops',
    'Enchanted Cat',
    'Enchanted Elephant',
    'Peacock',
'Enchanted Deer',
'Fairy',
'Green Cobra',
'Purple Cobra',
'Goblin',
'Crocodile',
'Dino',
'King Cobra',
'Sphinx',
'Panda',
'Axolotl',
'White Tiger',
'Red Panda',
'Samurai Bull',
'Samurai Dragon',
'Cotton Candy Lamb',
'Rainbow Fish',
'Rainbow Slime',
'Cupcake',
'Unicorn',
'Skele',
'Ghost',
'Reaper',
'Willow Wisp',
'Shadow Griffin',
'Agony',
'Phantom Wolf',
'Hell Chick',
'Hell Rock',
'HellHound',
'Hell Spider',
'Demon',
'Hound Of Hades',
'Wyvern Of Hades',
'Angel Cat',
'Angel Dog',
'Dove',
'Heavenly Peacock',
'Pegasus',
'Empyrean',
'Snake', 
'Empyrean' ,
'Stallion' ,
'Empyrean Fox', 
'Empyrean Dragon',  
'Angelus',
'Pog Cat' ,
'Pog Dog'  ,
'Pog Dragon' ,
'Pog Immortuus',
'Cyborg Cat' ,
'Cyborg Dog' ,
'Cyborg Bunny' , 
'Cyborg Dragon',
'Cyborg Ducky' ,
'Cyborg Panda' ,
'Cyborg Mortuus' ,
'Cyborg Dominus',
'Cyber Bunny',  
'Cyber Raccoon' ,
'Metal Skull' ,
'A-36',
'Cyber Fox',  
'Robot' , 
'Happy Computer', 
'Techno Cat',  
'M-2 PROTOTYPE' , 
'M-6 PROTOTYPE',
'Toy Mouse' , 
'Cat Magician'  ,
'Steampunk Octopus'  ,
'Steampunk Bat', 
'Steampunk Wolf', 
'Sophisticated Fox',
'Ducky Magician' ,
'Mining Mole' ,
'Steampunk Crocodile' ,
'Steampunk Fish',  
'Mechanical Spider' , 
'Blimp Dragon',
'Reversed Cat', 
'Reversed Dog' ,
'Stacked Cat' ,
'Stacked Dog',  
'Stacked Dominus',
'Blurred Bear' ,
'Blurred Axolotl' ,
'Blurred Dominus'  ,
'Blurred Agony' ,
'Dominus Alienus',
'Zombie Bull',  
'Zombie Squirrel' ,
'Zombie Corgi' ,
'Witch Cat',
'Ghost Cat' , 
'Pumpkin Cat' ,
'Vampire Bat', 
'Werewolf' ,
'The Grim Reaper' , 
'Ghoul Horse',
'Vampire Bat', 
'Werewolf' ,
'The Grim Reaper',  
'Ghoul Horse' ,
'Huge Pumpkin Cat',
'Bleebo the Alien' ,
'Meebo the Alien' ,
'Nine Eyed Lion' , 
'Meebo in a Spaceship',
'Gleebo the Alien' ,
'Astronaut Cat' , 
'Alien Axolotl' ,
'Star Surfer' ,
'Alien Parasite',
'Jelly Alien',  
'Alien Arachnid', 
'Red Fluffy',  
'Blue Fluffy', 
'Galaxy Fox',
'Huge Cat'
}, 
    function(petname)
PetNamehere = petname
end)

Visuals:Button("Open Pet", function()
    function HatchEgg(Pet)
        local pet = Pet
        for i,v in pairs(game.ReplicatedStorage.Game.Pets:GetChildren()) do
            if string.split(tostring(v), ' - ')[2] == pet then
                pet = string.split(tostring(v), ' - ')[1]
            end
        end
        local tbl = {
            {
            nk = 'Preston',
            idt = '69',
            e = false,
            uid = '69',
            s = 999999999999,
            id = pet,
        }}
        local egg
        for i_,script in pairs(game.ReplicatedStorage.Game.Eggs:GetDescendants()) do
            if script:IsA('ModuleScript') then
                if typeof(require(script).drops) == 'table' then
                    for i,v in pairs(require(script).drops) do
                        if v[1] == pet then
                            egg = require(script).displayName
                        end
                    end
                end
            end
        end
        if Pet == 'Huge Cat' then egg = 'Cracked Egg' end
        for i,v in pairs(getgc(true)) do
            if (typeof(v) == 'table' and rawget(v, 'OpenEgg')) then
                v.OpenEgg(egg, tbl)
            end
        end
     end
     HatchEgg(PetNamehere)
end)


Visuals:Button("Visual Dupe Gems", function()
    function comma_value(amount)
      local formatted = amount
     while true do  
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k == 0) then
          break
        end
      end
      return formatted
    end

    local diamonds = game.Players.LocalPlayer.PlayerGui.Main.Right.Diamonds.Amount
    local old = diamonds.Text
    local oldNumber = string.gsub(old, ",", "")
    local newNumber = oldNumber * 10000
    local new = comma_value(newNumber)
    local newString = tostring(new)
    diamonds.Text = newString
    end)

